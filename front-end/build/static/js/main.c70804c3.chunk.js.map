{"version":3,"sources":["images/Vectorll.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/Api.js","components/PopupWithFrom.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeletePlacePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","card","onCardClick","onCardLike","onCardDelete","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onClick","type","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","avatar","about","map","key","Footer","ImagePopup","isOpen","onClose","api","options","this","_baseUrl","baseUrl","_headers","headers","fetch","then","res","ok","json","Promise","reject","status","cardId","method","newCard","body","JSON","stringify","url","userData","authorization","PopupWithForm","title","children","submit","onSubmit","isLoading","action","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","htmlFor","id","placeholder","minLength","maxLength","required","value","onChange","e","target","EditAvatarPopup","inputRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","nameRef","linkRef","setLink","DeletePlacePopup","onDeletePlace","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isDeletePlacePopupOpen","setDeletePlacePopupOpen","isImageOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setLoading","deleteCard","setDeleteCard","closeAllPopups","handleCardClick","all","getCards","getUserInfo","catch","err","console","log","Provider","path","state","loggedIn","to","changeLikeCardStatus","newCards","c","updateProfile","newUser","finally","postCard","updateAvatar","filter","item","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","querySelector","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c70804c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Vectorll.c6f11019.svg\";","import React from 'react';\r\nimport logo from '../images/Vectorll.svg';\r\n\r\nexport { Header }\r\n\r\nfunction Header() {\r\n\r\n\r\n  return (\r\n\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"Mesto\" />\r\n    </header>\r\n\r\n  );\r\n}","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React, { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nexport { Card };\r\n\r\nfunction Card(props) {\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const { card, onCardClick, onCardLike, onCardDelete } = props;\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = `element__remove ${isOwn && 'element__remove_active'}`;\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = `element__heart ${isLiked && 'element__heart_active'}`;\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return (\r\n\r\n    <li className=\"element\">\r\n      <img className=\"element__pic\" src={card.link} alt={card.name} onClick={handleClick} />\r\n      <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleDeleteClick} />\r\n      <div className=\"element__content\">\r\n        <h2 className=\"element__name\">{card.name}</h2>\r\n        <div className=\"element__counter\">\r\n          <button className={cardLikeButtonClassName} onClick={handleLikeClick} />\r\n          <p className=\"element__heart-counter\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n\r\n  );\r\n}","import React, { useContext } from 'react';\r\nimport { Card } from './Card.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nexport { Main };\r\n\r\nfunction Main(props) {\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const { onEditAvatar, onEditProfile, onAddPlace, onCardClick, cards, onCardLike, onCardDelete, } = props;\r\n\r\n  return (\r\n\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__content\">\r\n          <button className=\"profile__avatar-button\"><img className=\"profile__avatar\" src={currentUser.avatar}\r\n            onClick={onEditAvatar} alt=\"Avatar\" /></button>\r\n          <div className=\"profile__info-container\">\r\n            <div className=\"profile__info\">\r\n              <h1 className=\"profile__info-heading\">{currentUser.name}</h1>\r\n              <button className=\"profile__info-edit\" onClick={onEditProfile} />\r\n            </div>\r\n            <p className=\"profile__info-text\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button className=\"profile__add-button popup-add-place\" onClick={onAddPlace} />\r\n      </section>\r\n\r\n      <section className=\"elements-section\">\r\n        <ul className=\"elements\">\r\n          {cards.map((card) => (\r\n            <Card key={card._id} card={card} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n\r\n  );\r\n}","import React from 'react';\r\n\r\nexport { Footer }\r\n\r\nfunction Footer() {\r\n\r\n\r\n  return (\r\n\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport { ImagePopup }\r\n\r\nfunction ImagePopup(props) {\r\n\r\n  const { isOpen, onClose, name, link } = props;\r\n\r\n  return (\r\n\r\n    <section className={`popup ${isOpen && 'popup_opened'}`}>\r\n      <figure className=\"element__container popup-mouse\">\r\n        <button className=\"popup__close popup-pic-close\" onClick={onClose} />\r\n        <img className=\"element__pic element__pic_active element-pic-full\" src={link} alt={name} />\r\n        <figcaption className=\"element__name element__name_active element-name-full\">{name}</figcaption>\r\n      </figure>\r\n    </section>\r\n  );\r\n}","class Api {\n  constructor(options) {\n    // тело конструктора\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        // если ошибка, отклоняем промис\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        // если ошибка, отклоняем промис\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      // если ошибка, отклоняем промис\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: `${isLiked ? 'PUT' : 'DELETE'}`,\n      headers: this._headers,\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      // если ошибка, отклоняем промис\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  postCard(newCard) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: newCard.name,\n        link: newCard.link\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      // если ошибка, отклоняем промис\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //up avatar\n  updateAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(\n        { avatar: avatar.url }\n      )\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      // если ошибка, отклоняем промис\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //up profile\n  updateProfile(userData) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userData.name,\n        about: userData.about\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      // если ошибка, отклоняем промис\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n  headers: {\n    authorization: '759b7868-e5b7-4679-b3b4-6ab62cbc0a7b',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport { api };","import React from 'react';\r\n\r\nexport { PopupWithForm };\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n  const { name, isOpen, title, children, submit, onClose, onSubmit, isLoading } = props;\r\n\r\n  return (\r\n\r\n    <section className={`popup popup_${name} \r\n      ${isOpen && 'popup_opened'\r\n      }`}>\r\n      <div className=\"popup__container popup-mouse\">\r\n        <button className=\"popup__close popup-edit-close\" onClick={onClose} />\r\n        <div className=\"popup__content\">\r\n          <h2 className=\"popup__heading\">{title}</h2>\r\n          <form className={`popup__form popup-${name}`} action='#' onSubmit={onSubmit}>\r\n            {children}\r\n            <button className=\"popup__save popup-edit-save\">\r\n              {isLoading ? `Сохранение...` : submit}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n  );\r\n}","import React, { useContext } from 'react';\r\nimport { PopupWithForm } from './PopupWithFrom.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nexport { EditProfilePopup };\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const { isOpen, onClose, onUpdateUser, isLoading } = props;\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n\r\n\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  function handleChangeName(e) {\r\n      setName(e.target.value)\r\n  }\r\n\r\n  function handleChangeDescription(e) {\r\n      setDescription(e.target.value)\r\n  }\r\n\r\n  return (\r\n\r\n    <PopupWithForm\r\n      name='profile'\r\n      title='Редактировать профиль'\r\n      submit='Сохранить'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      isLoading={isLoading}\r\n    >\r\n      <label htmlFor='name' className='popup__fields'>\r\n        <input\r\n          type='text'\r\n          className='popup__input'\r\n          id='name-input'\r\n          name='userName'\r\n          placeholder='Имя'\r\n          minLength='2'\r\n          maxLength='40'\r\n          required\r\n          value={name || ''}\r\n          onChange={handleChangeName}\r\n        />\r\n        <span className='popup__input-error' id='name-input-error'></span>\r\n      </label>\r\n      <label htmlFor='about' className='popup__fields'>\r\n        <input\r\n          type='text'\r\n          className='popup__input'\r\n          id='prof-input'\r\n          name='userProf'\r\n          placeholder='Род деятельности'\r\n          minLength='2'\r\n          maxLength='200'\r\n          required\r\n          value={description || ''}\r\n          onChange={handleChangeDescription}\r\n        />\r\n        <span className='popup__input-error' id='prof-input-error'></span>\r\n      </label>\r\n    </PopupWithForm>\r\n\r\n  );\r\n}","import React, { useRef } from 'react';\r\nimport { PopupWithForm } from './PopupWithFrom.js';\r\n\r\nexport { EditAvatarPopup };\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n  const inputRef = useRef(''); // записываем объект, возвращаемый хуком, в переменную\r\n\r\n  const { isOpen, onClose, onUpdateAvatar, isLoading } = props;\r\n\r\n\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    inputRef.current.value = '';\r\n  }, [isOpen]);\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onUpdateAvatar({\r\n      url: inputRef.current.value\r\n    });\r\n  }\r\n\r\n  return (\r\n\r\n    <PopupWithForm\r\n      name='avatar'\r\n      title='Обновить аватар'\r\n      submit='Сохранить'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      isLoading={isLoading}\r\n    >\r\n      <label htmlFor='url' className='popup__fields'>\r\n        <input\r\n          type='url'\r\n          className='popup__input'\r\n          id='url-input'\r\n          name='link'\r\n          placeholder='Ссылка на аватар'\r\n          required\r\n          ref={inputRef}\r\n        />\r\n        <span className='popup__input-error' id='url-input-error'></span>\r\n      </label>\r\n    </PopupWithForm>\r\n\r\n  );\r\n}","import React, { useRef } from 'react';\r\nimport { PopupWithForm } from './PopupWithFrom.js';\r\n\r\nexport { AddPlacePopup };\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n  const { isOpen, onClose, isLoading, onAddPlace } = props;\r\n\r\n  const nameRef = useRef(''); // записываем объект, возвращаемый хуком, в переменную\r\n  const linkRef = useRef('');\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setName('');\r\n    setLink('');\r\n  }, [isOpen]);\r\n\r\n  function handleChangeName(e) {\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n      setName(e.target.value)\r\n  }\r\n\r\n  function handleChangeLink(e) {\r\n      setLink(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace({\r\n      name,\r\n      link,\r\n    });\r\n  }\r\n\r\n  return (\r\n\r\n    <PopupWithForm\r\n      name='place'\r\n      title='Новое место'\r\n      submit='Создать'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      isLoading={isLoading}\r\n    >\r\n      <label htmlFor='name' className='popup__fields'>\r\n        <input\r\n          className='popup__input'\r\n          id='text-input'\r\n          name='name'\r\n          placeholder='Название'\r\n          minLength='1'\r\n          maxLength='30'\r\n          required\r\n          ref={nameRef}\r\n          onChange={handleChangeName}\r\n        />\r\n        <span className='popup__input-error' id='text-input-error'></span>\r\n      </label>\r\n      <label htmlFor='link' className='popup__fields'>\r\n        <input\r\n          type='url'\r\n          className='popup__input'\r\n          id='url-input'\r\n          name='link'\r\n          placeholder='Ссылка на картинку'\r\n          required\r\n          ref={linkRef}\r\n          onChange={handleChangeLink}\r\n        />\r\n        <span className='popup__input-error' id='url-input-error'></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  );\r\n}","import React from 'react';\r\nimport { PopupWithForm } from './PopupWithFrom.js';\r\n\r\nexport { DeletePlacePopup };\r\n\r\nfunction DeletePlacePopup(props) {\r\n\r\n  const { isOpen, onClose, isLoading, onDeletePlace } = props;\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onDeletePlace();\r\n  }\r\n\r\n  return (\r\n\r\n    <PopupWithForm\r\n      name='delete'\r\n      title='Вы уверены?'\r\n      submit='Да'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n}","import React, { useState } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { Header } from './Header.js';\nimport { Main } from './Main.js';\nimport { Footer } from './Footer.js';\nimport { ImagePopup } from './ImagePopup.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { api } from '../utils/Api.js';\nimport { EditProfilePopup } from './EditProfilePopup.js';\nimport { EditAvatarPopup } from './EditAvatarPopup.js';\nimport { AddPlacePopup } from './AddPlacePopup.js';\nimport { DeletePlacePopup } from './DeletePlacePopup.js';\n\n//Валидацию с закрытием не доделал, если есть возможность, прислал бы еще на проверку, если тут конечно все хорошо еще)\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isDeletePlacePopupOpen, setDeletePlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    isImageOpen: false,\n    link: '',\n    name: '',\n  });\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [deleteCard, setDeleteCard] = useState({});\n\n  React.useEffect(() => {\n    Promise.all([api.getCards(), api.getUserInfo()])\n      .then((res) => {\n        setCurrentUser(res[1]);\n        setCards(res[0]);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleDeletePlaceClick(card) {\n    setDeletePlacePopupOpen(true);\n    setDeleteCard(card);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setDeletePlacePopupOpen(false);\n    setSelectedCard({\n      isImageOpen: false,\n      link: '',\n      name: '',\n    });\n  }\n\n  function handleCardClick(card) {\n    const { link, name } = card;\n    setSelectedCard({ isImageOpen: true, link, name });\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardDelete() {\n    setLoading(true);\n    api.deleteCard(deleteCard._id)\n      .then(() => {\n\n        //обновляю стейт cards с помощью метода filter: создаю копию массива, исключив из него удалённую карточку.\n        setCards(cards.filter((item) => item !== deleteCard));\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setLoading(false));\n  }\n\n  function handleUpdateUser(userData) {\n    setLoading(true);\n    api.updateProfile(userData)\n      .then((newUser) => {\n        setCurrentUser(newUser);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setLoading(false));\n  }\n\n  function handleUpdateAvatar(avatar) {\n    setLoading(true);\n    api.updateAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setLoading(false));\n  }\n\n  function handleAddPlaceSubmit(card) {\n    setLoading(true);\n    api\n      .postCard(card)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setLoading(false));\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/sign-up\">\n\n            </Route>\n            <Route path=\"/sign-in\">\n\n            </Route>\n            <Route>\n              {this.state.loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n            </Route>\n          </Switch>\n        </BrowserRouter>  \n        <Main\n          cards={cards}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleDeletePlaceClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          handleCardClick={handleCardClick}\n        />\n        <Footer />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          isLoading={isLoading}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          isLoading={isLoading}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          isLoading={isLoading}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <DeletePlacePopup\n          isOpen={isDeletePlacePopupOpen}\n          onClose={closeAllPopups}\n          isLoading={isLoading}\n          onDeletePlace={handleCardDelete}\n        />\n\n        <ImagePopup\n          name={selectedCard.name}\n          link={selectedCard.link}\n          onClose={closeAllPopups}\n          isOpen={selectedCard.isImageOpen}\n        ></ImagePopup>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('.page')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}